#!/bin/zsh
# -*- mode: sh -*-
# zsh configuration
# (c) 2011-2017 Alexander Lockshyn

source ~/zsh/boot.sh

# Discard duplicates from both $PATH and $path
typeset -U PATH path

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source ~/zsh/common.sh
source ~/zsh/key.zsh
source ~/zsh/tools.zsh

HISTFILE=$ZDOTDIR/.histfile
HISTSIZE=50000
SAVEHIST=$HISTSIZE
setopt hist_ignore_all_dups # remove older duplicate entries from history
setopt hist_reduce_blanks # remove superfluous blanks from history items
setopt inc_append_history # save history entries as soon as they are entered
setopt share_history # share history between different instances of the shell
setopt append_history auto_cd complete_aliases extended_glob no_match notify 
setopt correct_all # autocorrect commands
setopt auto_list # automatically list choices on ambiguous completion
setopt auto_menu # automatically use menu completion
setopt always_to_end # move cursor to end if word had one match

# To use both the ignorespace and ignoredups feature
HISTCONTROL=ignoreboth

# https://stackoverflow.com/questions/58861448/zsh-delete-current-previous-argument-entirely
WORDCHARS='*?_-.~=&;!#$%^(){}<>'

# Case insensitive path-completion
zstyle ':completion:*' matcher-list 'm:{[:lower:]}={[:upper:]}'
zstyle ':completion:*' menu select # select completions with arrow keys
zstyle ':completion:*' group-name '' # group results by category
zstyle ':completion:::::' completer _expand _complete _ignored _approximate # enable approximate matches for completion

# setopt promptsubst
setopt PROMPT_SUBST
# Enable colors
autoload -Uz colors && colors 
# autoload -Uz vcs_info && vcs_info
# Time
# RPS1='%(?..%{$fg_bold[red]%}[%? $(kill -l $?)]%{${reset_color}%} )%T'

# For a full list of active aliases, run `alias`.
alias zshnew="autoload -Uz zsh-newuser-install && zsh-newuser-install -f"

# Remembering recent directories
# autoload -Uz add-zsh-hook
# DIRSTACKFILE="${XDG_CACHE_HOME:-$HOME/.cache}/zsh/dirs"
# if [[ -f "$DIRSTACKFILE" ]] && (( ${#dirstack} == 0 )); then
# 	dirstack=("${(@f)"$(< "$DIRSTACKFILE")"}")
# 	[[ -d "${dirstack[1]}" ]] && cd -- "${dirstack[1]}"
# fi
# function chpwd_dirstack() {
# 	print -l -- "$PWD" "${(u)dirstack[@]}" > "$DIRSTACKFILE"
# }
# add-zsh-hook -Uz chpwd chpwd_dirstack

DIRSTACKSIZE='20'
setopt AUTO_PUSHD PUSHD_SILENT PUSHD_TO_HOME
## Remove duplicate entries
setopt PUSHD_IGNORE_DUPS
## This reverts the +/- operators.
setopt PUSHD_MINUS

# To improve run-help's functionality, so that it works on shell builtins and other shell features
autoload -Uz run-help
(( ${+aliases[run-help]} )) && unalias run-help
alias help=run-help
# Assistant functions have to be enabled separately:
autoload -Uz run-help-git run-help-ip run-help-openssl run-help-p4 run-help-sudo run-help-svk run-help-svn

# fzf-tab
# https://github.com/Aloxaf/fzf-tab#usage
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# preview directory's content with exa when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
# switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'

###
### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone --depth=10 https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zinit-zsh/z-a-rust \
    zinit-zsh/z-a-as-monitor \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-bin-gem-node

### End of Zinit's installer chunk
###


# zsh-autosuggestions
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=#7b8c7c'
ZSH_AUTOSUGGEST_STRATEGY=(history completion)
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
ZSH_AUTOSUGGEST_USE_ASYNC=1
# bindkey '\eM' autosuggest-execute

# zinit snippet OMZ::lib/git.zsh
# zinit snippet OMZ::plugins/git/git.plugin.zsh
# zinit snippet PZT::modules/helper/init.zsh
# [Awesome] git config --global url."https://hub.fastgit.org/".insteadOf "https://github.com/"
# zinit snippet 'https://raw.fastgit.org/ohmyzsh/ohmyzsh/master/lib/git.zsh'
# zinit snippet 'https://raw.fastgit.org/ohmyzsh/ohmyzsh/master/plugins/git/git.plugin.zsh'
# zinit snippet 'https://raw.fastgit.org/sorin-ionescu/prezto/master/modules/helper/init.zsh'
zinit snippet 'https://gitee.com/kiss-younger/ohmyzsh/raw/master/lib/git.zsh'
zinit snippet 'https://gitee.com/kiss-younger/ohmyzsh/raw/master/plugins/git/git.plugin.zsh'
zinit snippet 'https://gitee.com/kiss-younger/prezto/raw/master/modules/helper/init.zsh'

zinit ice wait depth=1 lucid nocd
zinit load zdharma/history-search-multi-word

zinit ice wait depth=1 lucid nocd
zinit load zsh-users/zsh-history-substring-search
bindkey "\ep" history-substring-search-up
bindkey "\en" history-substring-search-down

#####################################[ Prompt ]#####################################

zinit ice depth=1
zinit light romkatv/powerlevel10k

# zinit ice depth=1
# zinit light agkozak/agkozak-zsh-prompt

# zinit ice depth=1 compile'(pure|async).zsh' pick'async.zsh' src'pure.zsh'
# zinit light sindresorhus/pure

# MYPROMPT=4

# # Load when MYPROMPT == 1
# zinit ice depth=1 load'![[ $MYPROMPT = 1 ]]' unload'![[ $MYPROMPT != 1 ]]' lucid
# zinit load halfo/lambda-mod-zsh-theme

# # Load when MYPROMPT == 2
# zinit ice depth=1 load'![[ $MYPROMPT = 2 ]]' unload'![[ $MYPROMPT != 2 ]]' \
#     pick"/dev/null" multisrc"{async,pure}.zsh" \
#     atload'!prompt_pure_precmd' lucid nocd
# zinit load sindresorhus/pure

# # Load when MYPROMPT == 3
# zinit ice depth=1 load'![[ $MYPROMPT = 3 ]]' unload'![[ $MYPROMPT != 3 ]]' \
#           atload'!geometry::prompt' lucid nocd
# zinit load geometry-zsh/geometry

# # Load when MYPROMPT == 4
# zinit ice depth=1 load'![[ $MYPROMPT = 4 ]]' unload'![[ $MYPROMPT != 4 ]]' \
#             atload'!source ~/.p10k.zsh; _p9k_precmd'
# zinit load romkatv/powerlevel10k

# # Load when MYPROMPT == 5
# zinit ice depth=1 load'![[ $MYPROMPT = 5 ]]' unload'![[ $MYPROMPT != 5 ]]' \
#     atload'!prompt_zinc_setup; prompt_zinc_precmd' lucid nocd
# zinit load robobenklein/zinc

# # Load when MYPROMPT == 6
# zinit ice depth=1 load'![[ $MYPROMPT = 6 ]]' unload'![[ $MYPROMPT != 6 ]]' \
#     atload'!spaceship_exec_time_precmd_hook; spaceship_exec_vcs_info_precmd_hook' lucid nocd
# zinit load denysdovhan/spaceship-prompt


# forgit
zinit ice wait lucid
zinit load wfxr/forgit

# ugit
zinit light Bhupesh-V/ugit

# diff-so-fancy
zinit ice wait"2" lucid as"program" pick"bin/git-dsf"
zinit load zdharma/zsh-diff-so-fancy

# zsh-startify, a vim-startify like plugin
zinit ice wait"0b" lucid atload"zsh-startify"
zinit load zdharma-continuum/zsh-startify

# declare-zsh
zinit ice wait"2" lucid
zinit load zdharma/declare-zsh

# zsh-vi
# https://github.com/jeffreytse/zsh-vi-mode
# ZVM_VI_SURROUND_BINDKEY=s-prefix
# zinit ice wait"1" depth=1 lucid
# zinit load jeffreytse/zsh-vi-mode

# TODO
zinit light mollifier/cd-gitroot
zinit light micha/resty
zinit light supercrabtree/k

zinit ice as"program"
zinit light DanielFGray/fzf-scripts

# zinit ice as"program" pick"src/*"
# zinit light Manas140/sh

# Note: fzf-tab needs to be loaded after compinit, but before plugins which will wrap widgets, such as zsh-autosuggestions or fast-syntax-highlighting
# Note: syntax-highlighting plugins (fast-syntax-highlighting, zsh-syntax-highlighting), should be loaded after plugins that are issuing compdefs
zinit wait depth=1 lucid light-mode for \
    atinit"zicompinit; zicdreplay" \
        Aloxaf/fzf-tab \
        zsh-users/zsh-syntax-highlighting \
    atload"_zsh_autosuggest_start" \
        zsh-users/zsh-autosuggestions \
    blockf atpull'zinit creinstall -q .' \
        zsh-users/zsh-completions
# zinit ice blockf atpull'zinit creinstall -q .'
# zinit light zsh-users/zsh-completions
# autoload compinit
# compinit
# zinit light zdharma/fast-syntax-highlighting
# zinit light zsh-users/zsh-autosuggestions

# Or :paru -Qi zsh-syntax-highlighting zsh-autosuggestions zsh-completions
# source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
# default variant
# zinit snippet https://github.com/sainnhe/sonokai/raw/master/zsh/.zsh-theme-sonokai-default

# vim: shiftwidth=4
